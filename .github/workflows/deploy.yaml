name: Deploy

on:
  push:
    branches: [ "main" ]

permissions: read-all


jobs:
  config:
    name: Config project
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2 
    - name: SSH into EC2 instance + deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.PRIVATE_KEY }}
        port: ${{ secrets.SSH_PORT }}
        script: |
          
          if [ -d "Nhom-12---Label-Studio" ]; then
            cd Nhom-12---Label-Studio
            https://github.com/nna9220/Nhom-12---Label-Studio.git
            wait
            cd ../
          else
            https://github.com/nna9220/Nhom-12---Label-Studio.git
            wait
          fi
          
  stop-old-container:
    name: Stop container
    runs-on: ubuntu-latest
    needs: config
    steps:
    - name: SSH into EC2 instance
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.PRIVATE_KEY }}
        port: ${{ secrets.SSH_PORT }}
        script: |
          sudo docker ps -a --filter ancestor=nhom12/label-studio --format "{{.ID}}" | xargs -r sudo docker stop 
      
  remove-old-container:
    name: Remove container
    needs: stop-old-container
    runs-on: ubuntu-latest
    steps:
    - name: SSH into EC2 instance
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.PRIVATE_KEY }}
        port: ${{ secrets.SSH_PORT }}
        script: |
            sudo docker ps -a --filter ancestor=nhom12/label-studio --format "{{.ID}}" | xargs -r sudo docker rm
          
          
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: remove-old-container
    steps:
    - name: SSH into EC2 instance
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.PRIVATE_KEY }}
        port: ${{ secrets.SSH_PORT }}
        script: |
          
          cd Nhom-12---Label-Studio
          chmod -R 755 ./deploy
          sudo apt-get update
          sudo apt-get install -y docker.io
          
          if [ ! -f /etc/docker/daemon.json ] || ! grep -q '"buildkit": true' /etc/docker/daemon.json; then
            echo '{"features": {"buildkit": true}}' | sudo tee /etc/docker/daemon.json
            sudo systemctl restart docker
          fi
          
          sudo systemctl start docker
          sudo systemctl enable docker
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          sudo docker-compose down
          sudo docker-compose up -d --build 
 
  start-container:
    name: Start container
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: SSH into EC2 instance
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.PRIVATE_KEY }}
        port: ${{ secrets.SSH_PORT }}
        script: |
          sudo docker run -d -p 8080:8080 nhom12/label-studio 
